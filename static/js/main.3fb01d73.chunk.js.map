{"version":3,"sources":["components/wtextarea/WTextarea.module.css","components/winput/WInput.module.css","components/wselect/WSelect.module.css","components/wdatetime/WDateTime.module.css","components/wgroupcheckbox/WGroupCheckbox.module.css","components/wemail/WEmail.module.css","components/winputnumber/WInputNumber.module.css","features/header/Header.module.css","components/wsuccess/WSuccess.module.css","components/wbutton/WButton.module.css","features/about/About.module.css","features/coordinator/Coordinator.module.css","features/when/When.module.css","features/about/aboutSlice.ts","features/header/Header.tsx","components/winput/WInput.tsx","components/wtextarea/WTextarea.tsx","components/wselect/WSelect.tsx","components/wgroupcheckbox/WGroupCheckbox.tsx","components/winputnumber/WInputNumber.tsx","components/wbutton/WButton.tsx","components/wemail/WEmail.tsx","components/wdatetime/WDateTime.tsx","components/wsuccess/WSuccess.tsx","features/about/About.tsx","features/coordinator/coordinatorSlice.ts","features/coordinator/Coordinator.tsx","features/when/whenSlice.ts","features/when/When.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["module","exports","aboutSlice","createSlice","name","initialState","title","titleError","description","descriptionError","categoryOptions","categoryId","paidEvent","eventFee","eventFeeError","reward","reducers","setTitle","state","action","payload","setTitleError","setDescription","setDescriptionError","setCategoryId","setPaidEvent","setEventFee","setEventFeeError","setReward","setCategoryOptions","actions","selectTitle","about","selectTitleError","selectDescription","selectDescriptionError","selectCategoryId","selectPaidEvent","selectEventFee","selectEventFeeError","selectReward","Header","className","styles","header","content","message","WInput","props","container","htmlFor","required","inputLabel","inputLabelRequired","wInputContent","wInput","type","id","placeholder","onBlur","e","onBlurCallback","target","value","onBlurHandler","hasError","errorContent","WTextarea","useState","countChar","setCountChar","textareaLabel","textareaLabelRequired","wTextareaContent","wTextArea","maxLength","onChange","length","handleOnChange","wWordCount","wWordTotal","WSelect","wSelectLabel","wSelectLabelRequired","wSelectContent","wSelect","defaultValue","onChangeCallback","Number","onChangeHandler","options","map","option","disabled","hidden","key","WGroupCheckbox","isPaid","setIsPaid","groupCheckboxLabel","groupCheckbox","inputName","inputPlaceholder","groupCheckboxInput","OnFeeInputBlurCallback","onFeeInputBlurHandler","WInputNumber","inputNumberLabel","inputContainer","min","inputNumber","sideLabel","WButton","wButton","onClick","WEmail","wEmailLabel","wEmailContent","wEmail","ref","reference","WDateTime","wDateLabel","wDateTimeContent","wDate","onBlurDateCallback","onBlurDateHandler","separator","wTime","onBlurTimeCallback","onBlurTimeHandler","WSuccess","About","dispatch","useDispatch","useSelector","hasTitleError","hasDescriptionError","hasEvenFeeError","useEffect","fetch","then","response","json","data","containerTitle","coordinatorSlice","idError","email","emailError","responsibleOptions","setId","setIdError","setEmail","setEmailError","setResponsibleOptions","selectId","coordinator","selectIdError","selectEmail","selectEmailError","Coordinator","emailRef","useRef","hasIdError","hasEmailError","setEmailContent","current","focus","handleSelectOnChange","whenSlice","date","dateError","time","timeError","duration","setDate","setDateError","setTime","setTimeError","setDuration","selectDate","when","selectDateError","selectTime","selectTimeError","selectDuration","When","hasDateError","hasTimeError","App","isValidForm","setIsValidForm","isPaidEvent","responsibleId","startDate","startTime","eventDuration","hasEventFeeError","hasCoordinatorIdError","test","isProperEmail","console","log","category_id","paid_event","event_fee","store","configureStore","reducer","aboutReducer","coordinatorReducer","whenReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.3fb01d73.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WTextarea_container__3PjYw\",\"textareaLabel\":\"WTextarea_textareaLabel__X8wyz\",\"textareaLabelRequired\":\"WTextarea_textareaLabelRequired__2gAGE\",\"wTextareaContent\":\"WTextarea_wTextareaContent__1r-QY\",\"wTextArea\":\"WTextarea_wTextArea__2m_hl\",\"wTextarea\":\"WTextarea_wTextarea__2ej8h\",\"wWordCount\":\"WTextarea_wWordCount__1hr9L\",\"wWordTotal\":\"WTextarea_wWordTotal__3rhaF\",\"errorContent\":\"WTextarea_errorContent__1-FZQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WInput_container__1NA77\",\"inputLabel\":\"WInput_inputLabel__2k-Gx\",\"inputLabelRequired\":\"WInput_inputLabelRequired__MpILs\",\"wInputContent\":\"WInput_wInputContent__1PspO\",\"wInput\":\"WInput_wInput__vKQso\",\"errorContent\":\"WInput_errorContent__3iZ0w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WSelect_container__2wlQI\",\"wSelectLabel\":\"WSelect_wSelectLabel__1To9K\",\"wSelectLabelRequired\":\"WSelect_wSelectLabelRequired__2bsvi\",\"wSelectContent\":\"WSelect_wSelectContent__1I3lc\",\"wSelect\":\"WSelect_wSelect__1JSW6\",\"errorContent\":\"WSelect_errorContent__3qm7H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WDateTime_container__VX8sB\",\"wDateLabel\":\"WDateTime_wDateLabel__2ba6o\",\"wDateTimeContent\":\"WDateTime_wDateTimeContent__JI_PM\",\"wDate\":\"WDateTime_wDate__3-px7\",\"separator\":\"WDateTime_separator__37RrZ\",\"wTime\":\"WDateTime_wTime__swhUG\",\"errorContent\":\"WDateTime_errorContent__2SXph\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WGroupCheckbox_container__1Xa7s\",\"groupCheckbox\":\"WGroupCheckbox_groupCheckbox__2K1qM\",\"groupCheckboxLabel\":\"WGroupCheckbox_groupCheckboxLabel__1NHRR\",\"groupCheckboxInput\":\"WGroupCheckbox_groupCheckboxInput__21AiF\",\"errorContent\":\"WGroupCheckbox_errorContent__1pTHy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WEmail_container__LIlpi\",\"wEmailLabel\":\"WEmail_wEmailLabel___tC_R\",\"wEmailContent\":\"WEmail_wEmailContent__3pmxX\",\"wEmail\":\"WEmail_wEmail__1Dx-N\",\"errorContent\":\"WEmail_errorContent__6K2tJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WInputNumber_container__3rVC2\",\"inputNumberLabel\":\"WInputNumber_inputNumberLabel__W7bFk\",\"inputContainer\":\"WInputNumber_inputContainer__1WW7K\",\"inputNumber\":\"WInputNumber_inputNumber__36yV0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__15j4c\",\"content\":\"Header_content__3g0xo\",\"message\":\"Header_message__10Yhq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WSuccess_container__3KGfF\",\"title\":\"WSuccess_title__3wwuh\",\"message\":\"WSuccess_message__3k3ud\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WButton_container__i-twW\",\"wButton\":\"WButton_wButton__fGwEw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"About_container__3yflm\",\"containerTitle\":\"About_containerTitle__1TVS7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Coordinator_container__2WHMt\",\"containerTitle\":\"Coordinator_containerTitle__1e-jc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"When_container__GJ8lM\",\"containerTitle\":\"When_containerTitle__3lyw6\"};","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { AppThunk, RootState } from \"../../app/store\";\n\ninterface AboutState {\n  title: string;\n  titleError: boolean;\n  description: string;\n  descriptionError: boolean;\n  categoryOptions: { id: number; name: string }[];\n  categoryId: number | null;\n  paidEvent: boolean;\n  eventFee: number;\n  eventFeeError: boolean;\n  reward: number;\n}\n\nconst initialState: AboutState = {\n  title: \"\",\n  titleError: false,\n  description: \"\",\n  descriptionError: false,\n  categoryOptions: [],\n  categoryId: null,\n  paidEvent: false,\n  eventFee: 0,\n  eventFeeError: false,\n  reward: 0,\n};\n\nexport const aboutSlice = createSlice({\n  name: \"about\",\n  initialState,\n  reducers: {\n    setTitle: (state, action: PayloadAction<string>) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.title = action.payload;\n    },\n    setTitleError: (state, action: PayloadAction<boolean>) => {\n      state.titleError = action.payload;\n    },\n    setDescription: (state, action: PayloadAction<string>) => {\n      state.description = action.payload;\n    },\n    setDescriptionError: (state, action: PayloadAction<boolean>) => {\n      state.descriptionError = action.payload;\n    },\n    setCategoryId: (state, action: PayloadAction<number | null>) => {\n      state.categoryId = action.payload;\n    },\n    setPaidEvent: (state, action: PayloadAction<boolean>) => {\n      state.paidEvent = action.payload;\n    },\n    setEventFee: (state, action: PayloadAction<number>) => {\n      state.eventFee = action.payload;\n    },\n    setEventFeeError: (state, action: PayloadAction<boolean>) => {\n      state.eventFeeError = action.payload;\n    },\n    setReward: (state, action: PayloadAction<number>) => {\n      state.reward = action.payload;\n    },\n    setCategoryOptions: (\n      state,\n      action: PayloadAction<Array<{ id: number; name: string }>>\n    ) => {\n      state.categoryOptions = [...action.payload];\n    },\n  },\n});\n\nexport const {\n  setTitle,\n  setTitleError,\n  setDescription,\n  setDescriptionError,\n  setCategoryId,\n  setPaidEvent,\n  setEventFee,\n  setEventFeeError,\n  setReward,\n  setCategoryOptions,\n} = aboutSlice.actions;\n\n// The function below is called a thunk and allows us to perform async logic.\nexport const fetchCategoryOptions = (): AppThunk => (dispatch) => {\n  return fetch(\"http://www.mocky.io/v2/5bcdd3942f00002c00c855ba\")\n    .then((response) => response.json())\n    .then((data) => dispatch(setCategoryOptions(data)));\n};\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\nexport const selectTitle = (state: RootState) => state.about.title;\nexport const selectTitleError = (state: RootState) => state.about.titleError;\nexport const selectDescription = (state: RootState) => state.about.description;\nexport const selectDescriptionError = (state: RootState) =>\n  state.about.descriptionError;\nexport const selectCategoryId = (state: RootState) => state.about.categoryId;\nexport const selectPaidEvent = (state: RootState) => state.about.paidEvent;\nexport const selectEventFee = (state: RootState) => state.about.eventFee;\nexport const selectEventFeeError = (state: RootState) => state.about.eventFeeError;\nexport const selectReward = (state: RootState) => state.about.reward;\nexport const categoryOptions = (state: RootState) =>\n  state.about.categoryOptions;\n\nexport default aboutSlice.reducer;\n","import React from \"react\";\nimport styles from \"./Header.module.css\";\n\nexport function Header() {\n  return (\n    <div className={styles.header}>\n      <div className={styles.content}>\n          <div className={styles.message}>New event</div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport styles from \"./WInput.module.css\";\n\ninterface WInputProps {\n  title: string;\n  placeholder: string;\n  hasError?: boolean;\n  onBlurCallback?: (value: string) => void;\n  required?: boolean;\n}\n\nexport function WInput(props: WInputProps) {\n  const getClass = () => {\n    return props.required\n      ? styles.inputLabel + \" \" + styles.inputLabelRequired\n      : styles.inputLabel;\n  };\n\n  const onBlurHandler = (e: any) => {\n    props.onBlurCallback && props.onBlurCallback(e.target.value);\n  };\n\n  return (\n    <div className={styles.container}>\n      <label htmlFor=\"title\" className={getClass()}>\n        {props.title}\n      </label>\n      <div className={styles.wInputContent}>\n        <input\n          className={styles.wInput}\n          type=\"text\"\n          id=\"title\"\n          placeholder={props.placeholder}\n          onBlur={(e: any) => onBlurHandler(e)}\n        />\n        {props.hasError && (\n          <div className={styles.errorContent}>This field is required*</div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { ChangeEvent, useState } from \"react\";\nimport styles from \"./WTextarea.module.css\";\n\ninterface WTextareaProps {\n  title: string;\n  placeholder: string;\n  maxLength: number;\n  required?: boolean;\n  hasError?: boolean;\n  onBlurCallback?: (value: string) => void;\n}\n\nexport function WTextarea(props: WTextareaProps) {\n  const getClass = () => {\n    return props.required\n      ? styles.textareaLabel + \" \" + styles.textareaLabelRequired\n      : styles.textareaLabel;\n  };\n\n  const [countChar, setCountChar] = useState(0);\n\n  const handleOnChange = (e: ChangeEvent) => {\n    setCountChar((e.target as HTMLInputElement).value.length);\n  };\n\n  const onBlurHandler = (e: any) => {\n    props.onBlurCallback && props.onBlurCallback(e.target.value);\n  };\n\n  return (\n    <div className={styles.container}>\n      <label htmlFor=\"description\" className={getClass()}>\n        {props.title}\n      </label>\n      <div className={styles.wTextareaContent}>\n        <textarea\n          id=\"description\"\n          className={styles.wTextArea}\n          maxLength={props.maxLength}\n          placeholder={props.placeholder}\n          onChange={(e: ChangeEvent) => handleOnChange(e)}\n          onBlur={(e: any) => onBlurHandler(e)}\n        />\n\n        <div className={styles.wWordCount}>\n          <span>word limit</span>\n          <span className={styles.wWordTotal}>\n            {countChar}/{props.maxLength}\n          </span>\n        </div>\n\n        {props.hasError && (\n          <div className={styles.errorContent}>This field is required*</div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport styles from \"./WSelect.module.css\";\n\ninterface WSelectProps {\n  title: string;\n  options: { id: number; name: string }[];\n  defaultValue: number;\n  required?: boolean;\n  hasError?: boolean;\n  onChangeCallback?: (id: number) => void;\n}\n\nexport function WSelect(props: WSelectProps) {\n  const getClass = () => {\n    return props.required\n      ? styles.wSelectLabel + \" \" + styles.wSelectLabelRequired\n      : styles.wSelectLabel;\n  };\n\n  const onChangeHandler = (e: any) => {\n    props.onChangeCallback && props.onChangeCallback(Number(e.target.value));\n  };\n\n  return (\n    <div className={styles.container}>\n      <label htmlFor={props.title} className={getClass()}>\n        {props.title}\n      </label>\n      <div className={styles.wSelectContent}>\n        <select\n          name={props.title}\n          className={styles.wSelect}\n          defaultValue={props.defaultValue}\n          onChange={(e) => onChangeHandler(e)}\n        >\n          {props.options.map((option) =>\n            props.defaultValue === option.id ? (\n              <option value={option.id} disabled hidden key={option.name}>\n                {option.name}\n              </option>\n            ) : (\n              <option value={option.id} key={option.name}>\n                {option.name}\n              </option>\n            )\n          )}\n        </select>\n        {props.hasError && (\n          <div className={styles.errorContent}>This field is required*</div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { ChangeEvent, useState } from \"react\";\nimport styles from \"./WGroupCheckbox.module.css\";\n\ninterface WGroupCheckboxProps {\n  title: string;\n  options: { name: string; value: string; title: string }[];\n  inputPlaceholder: string;\n  inputName: string;\n  hasError?: boolean;\n  onChangeCallback?: (value: boolean) => void;\n  OnFeeInputBlurCallback?: (value: number) => void;\n}\n\nexport function WGroupCheckbox(props: WGroupCheckboxProps) {\n  const [isPaid, setIsPaid] = useState(false);\n\n  const onChangeHandler = (e: ChangeEvent) => {\n    const value = (e.target as HTMLInputElement).value;\n    setIsPaid(value === \"paid\");\n    props.onChangeCallback && props.onChangeCallback(value === \"paid\");\n  };\n\n  const onFeeInputBlurHandler = (e: ChangeEvent) => {\n    const value = (e.target as HTMLInputElement).value;\n    props.OnFeeInputBlurCallback && props.OnFeeInputBlurCallback(Number(value));\n  };\n\n  return (\n    <div className={styles.container}>\n      <label className={styles.groupCheckboxLabel}>{props.title}</label>\n\n      <div className={styles.groupCheckbox}>\n        {props.options.map((option) => {\n          return (\n            <span key={option.title}>\n              <input\n                type=\"radio\"\n                name={option.name}\n                value={option.value}\n                onChange={(e: ChangeEvent) => onChangeHandler(e)}\n              />\n              <label htmlFor={option.name}>{option.title}</label>\n            </span>\n          );\n        })}\n\n        {isPaid && (\n          <span>\n            <input\n              type=\"number\"\n              name={props.inputName}\n              placeholder={props.inputPlaceholder}\n              className={styles.groupCheckboxInput}\n              onBlur={(e) => onFeeInputBlurHandler(e)}\n            />{\" \"}\n            $\n          </span>\n        )}\n\n        {props.hasError && (\n          <div className={styles.errorContent}>This field is required*</div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { ChangeEvent } from \"react\";\nimport styles from \"./WInputNumber.module.css\";\n\ninterface WInputNumberProps {\n  title: string;\n  inputName: string;\n  placeholder: string;\n  min: number;\n  sideLabel: string;\n  onBlurCallback?: (value: number) => void;\n}\n\nexport function WInputNumber(props: WInputNumberProps) {\n  const onBlurHandler = (e: ChangeEvent) => {\n    props.onBlurCallback &&\n      props.onBlurCallback(Number((e.target as HTMLInputElement).value));\n  };\n\n  return (\n    <div className={styles.container}>\n      <label className={styles.inputNumberLabel}>{props.title}</label>\n      <div className={styles.inputContainer}>\n        <input\n          type=\"number\"\n          name={props.inputName}\n          placeholder={props.placeholder}\n          min={props.min}\n          className={styles.inputNumber}\n          onBlur={(e: ChangeEvent) => onBlurHandler(e)}\n        />\n        <span>{props.sideLabel}</span>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport styles from \"./WButton.module.css\";\n\ninterface WButtonProps {\n  content: string;\n  onClick: () => void;\n}\n\nexport function WButton(props: WButtonProps) {\n  return (\n    <div className={styles.container}>\n      <button className={styles.wButton} onClick={props.onClick}>{props.content}</button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport styles from \"./WEmail.module.css\";\n\ninterface WEmailProps {\n  title: string;\n  placeholder: string;\n  value?: string;\n  hasError?: boolean;\n  reference?: any;\n  onBlurCallback?: (value: string) => void;\n  onChangeCallback?: (e: any) => void;\n}\n\nexport function WEmail(props: WEmailProps) {\n  const onBlurHandler = (e: any) => {\n    props.onBlurCallback && props.onBlurCallback(e.target.value);\n  };\n\n  return (\n    <div className={styles.container}>\n      <label htmlFor=\"email\" className={styles.wEmailLabel}>\n        {props.title}\n      </label>\n      <div className={styles.wEmailContent}>\n        <input\n          className={styles.wEmail}\n          type=\"email\"\n          id=\"email\"\n          value={props.value}\n          placeholder={props.placeholder}\n          ref={props.reference}\n          onChange={(e: any) =>\n            props.onChangeCallback && props.onChangeCallback(e)\n          }\n          onBlur={(e: any) => onBlurHandler(e)}\n        />\n        {props.hasError && (\n          <div className={styles.errorContent}>\n            Please correct the email's format\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport styles from \"./WDateTime.module.css\";\n\ninterface WDateTimeProps {\n  title: string;\n  hasError?: boolean;\n  onBlurDateCallback?: (value: Date) => void;\n  onBlurTimeCallback?: (value: string) => void;\n  required?: boolean;\n}\n\nexport function WDateTime(props: WDateTimeProps) {\n  const onBlurDateHandler = (e: any) => {\n    props.onBlurDateCallback && props.onBlurDateCallback(e.target.value);\n  };\n\n  const onBlurTimeHandler = (e: any) => {\n    props.onBlurTimeCallback && props.onBlurTimeCallback(e.target.value);\n  };\n\n  return (\n    <div className={styles.container}>\n      <label htmlFor=\"date\" className={styles.wDateLabel}>\n        {props.title}\n      </label>\n      <div className={styles.wDateTimeContent}>\n        <input\n          className={styles.wDate}\n          type=\"date\"\n          onBlur={(e: any) => onBlurDateHandler(e)}\n        />\n        <span className={styles.separator}>at</span>\n        <input\n          className={styles.wTime}\n          type=\"time\"\n          onBlur={(e: any) => onBlurTimeHandler(e)}\n        />\n        {props.hasError && (\n          <div className={styles.errorContent}>\n            Both of these fields are required*{\" \"}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport styles from \"./WSuccess.module.css\";\n\ninterface WSuccessProps {\n  title: string;\n  message: string;\n}\n\nexport function WSuccess(props: WSuccessProps) {\n  return (\n    <div className={styles.container}>\n      <div className={styles.title}>{props.title}</div>\n      <div className={styles.message}>{props.message}</div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  WInput,\n  WTextarea,\n  WSelect,\n  WGroupCheckbox,\n  WInputNumber,\n} from \"../../components\";\nimport {\n  setTitle,\n  fetchCategoryOptions,\n  categoryOptions,\n  selectTitleError,\n  setDescription,\n  setCategoryId,\n  setPaidEvent,\n  setEventFee,\n  setReward,\n  selectDescriptionError,\n  selectEventFeeError,\n} from \"./aboutSlice\";\n  \nimport styles from \"./About.module.css\";\n\nexport function About() {\n  const dispatch = useDispatch();\n\n  const options = useSelector(categoryOptions);\n  const hasTitleError = useSelector(selectTitleError);\n  const hasDescriptionError = useSelector(selectDescriptionError);\n  const hasEvenFeeError = useSelector(selectEventFeeError);\n\n  useEffect(() => {\n    dispatch(fetchCategoryOptions());\n  }, [dispatch]);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.containerTitle}>About</div>\n\n      <WInput\n        title=\"TITLE\"\n        required\n        placeholder=\"Make it short and clear\"\n        hasError={hasTitleError}\n        onBlurCallback={(value) => dispatch(setTitle(value))}\n      />\n\n      <WTextarea\n        title=\"DESCRIPTION\"\n        required\n        placeholder=\"Write about your event, be creative\"\n        maxLength={140}\n        hasError={hasDescriptionError}\n        onBlurCallback={(value) => dispatch(setDescription(value))}\n      />\n\n      <WSelect\n        title=\"CATEGORY\"\n        options={[{ id: -1, name: \"Select category\" }, ...options]}\n        defaultValue={-1}\n        onChangeCallback={(value) => dispatch(setCategoryId(value))}\n      />\n\n      <WGroupCheckbox\n        title=\"PAYMENT\"\n        options={[\n          { name: \"eventType\", value: \"free\", title: \"Free event\" },\n          { name: \"eventType\", value: \"paid\", title: \"Paid event\" },\n        ]}\n        inputName=\"Fee\"\n        inputPlaceholder=\"Fee\"\n        hasError={hasEvenFeeError}\n        onChangeCallback={(value) => dispatch(setPaidEvent(value))}\n        OnFeeInputBlurCallback={(value) => dispatch(setEventFee(value))}\n      />\n\n      <WInputNumber\n        title=\"Reward\"\n        inputName=\"reward\"\n        placeholder=\"Number\"\n        min={0}\n        sideLabel=\"reward points for attendance\"\n        onBlurCallback={(value) => dispatch(setReward(value))}\n      />\n    </div>\n  );\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { AppThunk, RootState } from \"../../app/store\";\n\ninterface CoordinatorState {\n  id: number | null;\n  idError: boolean;\n  email: string;\n  emailError: boolean;\n  responsibleOptions: {\n    id: number;\n    email: string;\n    name: string;\n    lastname: string;\n  }[];\n}\n\nconst initialState: CoordinatorState = {\n  id: null,\n  idError: false,\n  email: \"\",\n  emailError: false,\n  responsibleOptions: [],\n};\n\nexport const coordinatorSlice = createSlice({\n  name: \"coordinator\",\n  initialState,\n  reducers: {\n    setId: (state, action: PayloadAction<number>) => {\n      state.id = action.payload;\n    },\n    setIdError: (state, action: PayloadAction<boolean>) => {\n      state.idError = action.payload;\n    },\n    setEmail: (state, action: PayloadAction<string>) => {\n      state.email = action.payload;\n    },\n    setEmailError: (state, action: PayloadAction<boolean>) => {\n      state.emailError = action.payload;\n    },\n    setResponsibleOptions: (\n      state,\n      action: PayloadAction<\n        Array<{ id: number; email: string; name: string; lastname: string }>\n      >\n    ) => {\n      state.responsibleOptions = [...action.payload];\n    },\n  },\n});\n\nexport const {\n  setId,\n  setIdError,\n  setEmail,\n  setEmailError,\n  setResponsibleOptions,\n} = coordinatorSlice.actions;\n\n// The function below is called a thunk and allows us to perform async logic.\nexport const fetchResponsibleOptions = (): AppThunk => (dispatch) => {\n  return fetch(\"http://www.mocky.io/v2/5bcdd7992f00006300c855d5\")\n    .then((response) => response.json())\n    .then((data) => dispatch(setResponsibleOptions(data)));\n};\n\nexport const selectId = (state: RootState) => state.coordinator.id;\nexport const selectIdError = (state: RootState) => state.coordinator.idError;\nexport const selectEmail = (state: RootState) => state.coordinator.email;\nexport const selectEmailError = (state: RootState) =>\n  state.coordinator.emailError;\nexport const responsibleOptions = (state: RootState) =>\n  state.coordinator.responsibleOptions;\n\nexport default coordinatorSlice.reducer;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  fetchResponsibleOptions,\n  responsibleOptions,\n  selectEmailError,\n  selectIdError,\n  setEmail,\n  setId,\n} from \"./coordinatorSlice\";\nimport { WSelect, WEmail } from \"../../components\";\n\nimport styles from \"./Coordinator.module.css\";\n\nexport function Coordinator() {\n  const dispatch = useDispatch();\n\n  const emailRef = useRef();\n\n  const options = useSelector(responsibleOptions);\n  const hasIdError = useSelector(selectIdError);\n  const hasEmailError = useSelector(selectEmailError);\n\n  const [email, setEmailContent] = useState(\"\");\n\n  const handleSelectOnChange = (value: number) => {\n    dispatch(setId(value));\n    setEmailContent(options[value].email);\n  };\n\n  const handleEmailOnChange = (value: string) => {\n    dispatch(setEmail(value));\n    setEmailContent(value);\n  };\n\n  useEffect(() => {\n    dispatch(fetchResponsibleOptions());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (email.length > 0) {\n      //@ts-ignore\n      emailRef.current.focus();\n    }\n  }, [email]);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.containerTitle}>Coordinator</div>\n      <WSelect\n        title=\"RESPONSIBLE\"\n        options={[{ id: -1, name: \"Select category\" }, ...options]}\n        defaultValue={-1}\n        required\n        hasError={hasIdError}\n        onChangeCallback={(value) => handleSelectOnChange(value)}\n      />\n\n      <WEmail\n        title=\"EMAIL\"\n        placeholder=\"Email\"\n        hasError={hasEmailError}\n        value={email}\n        reference={emailRef}\n        onChangeCallback={(e: any) => handleEmailOnChange(e.target.value)}\n        onBlurCallback={(value: string) => dispatch(setEmail(value))}\n      />\n    </div>\n  );\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../app/store\";\n\ninterface WhenState {\n  date: Date | null;\n  time: string | null;\n  timeError: boolean;\n  dateError: boolean;\n  duration: number;\n}\n\nconst initialState: WhenState = {\n  date: null,\n  dateError: false,\n  time: null,\n  timeError: false,\n  duration: 0,\n};\n\nexport const whenSlice = createSlice({\n  name: \"when\",\n  initialState,\n  reducers: {\n    setDate: (state, action: PayloadAction<Date>) => {\n      state.date = action.payload;\n    },\n    setDateError: (state, action: PayloadAction<boolean>) => {\n      state.dateError = action.payload;\n    },\n    setTime: (state, action: PayloadAction<string>) => {\n      state.time = action.payload;\n    },\n    setTimeError: (state, action: PayloadAction<boolean>) => {\n      state.timeError = action.payload;\n    },\n    setDuration: (state, action: PayloadAction<number>) => {\n      state.duration = action.payload;\n    },\n  },\n});\n\nexport const {\n  setDate,\n  setDateError,\n  setDuration,\n  setTime,\n  setTimeError,\n} = whenSlice.actions;\n\nexport const selectDate = (state: RootState) => state.when.date;\nexport const selectDateError = (state: RootState) => state.when.dateError;\nexport const selectTime = (state: RootState) => state.when.time;\nexport const selectTimeError = (state: RootState) => state.when.timeError;\nexport const selectDuration = (state: RootState) => state.when.duration;\n\nexport default whenSlice.reducer;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectDateError,\n  selectTimeError,\n  setDate,\n  setDuration,\n  setTime,\n} from \"./whenSlice\";\nimport { WInputNumber, WDateTime } from \"../../components\";\n\nimport styles from \"./When.module.css\";\n\nexport function When() {\n  const dispatch = useDispatch();\n\n  const hasDateError = useSelector(selectDateError);\n  const hasTimeError = useSelector(selectTimeError);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.containerTitle}>When</div>\n      <WDateTime\n        title=\"STARTS ON\"\n        onBlurDateCallback={(value) => dispatch(setDate(value))}\n        onBlurTimeCallback={(value) => dispatch(setTime(value))}\n        hasError={hasTimeError || hasDateError}\n      />\n      <WInputNumber\n        title=\"DURATION\"\n        inputName=\"duration\"\n        placeholder=\"Number\"\n        min={0}\n        sideLabel=\"hour\"\n        onBlurCallback={(value) => dispatch(setDuration(value))}\n      />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectDescription,\r\n  selectTitle,\r\n  selectCategoryId,\r\n  selectPaidEvent,\r\n  selectEventFee,\r\n  selectReward,\r\n  setDescriptionError,\r\n  setTitleError,\r\n  setEventFeeError,\r\n  selectTitleError,\r\n  selectDescriptionError,\r\n  selectEventFeeError,\r\n} from \"./features/about/aboutSlice\";\r\nimport { Header, About, Coordinator, When } from \"./features\";\r\nimport \"./App.css\";\r\nimport { WButton, WSuccess } from \"./components\";\r\nimport {\r\n  selectEmail,\r\n  selectEmailError,\r\n  selectId,\r\n  selectIdError,\r\n  setEmailError,\r\n  setIdError,\r\n} from \"./features/coordinator/coordinatorSlice\";\r\nimport {\r\n  selectDate,\r\n  selectDateError,\r\n  selectDuration,\r\n  selectTime,\r\n  selectTimeError,\r\n  setDateError,\r\n  setTimeError,\r\n} from \"./features/when/whenSlice\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [isValidForm, setIsValidForm] = useState(false);\r\n\r\n  const title = useSelector(selectTitle);\r\n  const description = useSelector(selectDescription);\r\n  const categoryId = useSelector(selectCategoryId);\r\n  const isPaidEvent = useSelector(selectPaidEvent);\r\n  const eventFee = useSelector(selectEventFee);\r\n  const reward = useSelector(selectReward);\r\n\r\n  const responsibleId = useSelector(selectId);\r\n  const email = useSelector(selectEmail);\r\n\r\n  const startDate = useSelector(selectDate);\r\n  const startTime = useSelector(selectTime);\r\n  const eventDuration = useSelector(selectDuration);\r\n\r\n  const hasTitleError = useSelector(selectTitleError);\r\n  const hasDescriptionError = useSelector(selectDescriptionError);\r\n  const hasEventFeeError = useSelector(selectEventFeeError);\r\n  const hasCoordinatorIdError = useSelector(selectIdError);\r\n  const hasEmailError = useSelector(selectEmailError);\r\n  const hasDateError = useSelector(selectDateError);\r\n  const hasTimeError = useSelector(selectTimeError);\r\n\r\n  const isProperEmail = (email: string) => {\r\n    const re = /\\S+@\\S+\\.\\S+/;\r\n    return re.test(email);\r\n  };\r\n\r\n  const validateAndPrintData = () => {\r\n    dispatch(setTitleError(!title.length));\r\n\r\n    dispatch(setDescriptionError(!description.length));\r\n\r\n    dispatch(setEventFeeError(isPaidEvent && eventFee <= 0));\r\n\r\n    dispatch(setIdError(responsibleId === null));\r\n\r\n    dispatch(setEmailError(!isProperEmail(email)));\r\n\r\n    dispatch(setDateError(startDate === null));\r\n\r\n    dispatch(setTimeError(!startTime?.length));\r\n\r\n    // this validation can be broken into a smaller function or even better get this data to a different component through Redux. I am doing this just for conviniece\r\n    if (\r\n      !hasTitleError &&\r\n      title.length &&\r\n      !hasDescriptionError &&\r\n      description.length &&\r\n      !hasEventFeeError &&\r\n      !hasCoordinatorIdError &&\r\n      responsibleId &&\r\n      !hasEmailError &&\r\n      startDate &&\r\n      !hasDateError &&\r\n      startTime &&\r\n      !hasTimeError\r\n    ) {\r\n      console.log({\r\n        title,\r\n        description,\r\n        category_id: categoryId,\r\n        paid_event: isPaidEvent,\r\n        event_fee: isPaidEvent ? eventFee : 0,\r\n        reward: reward,\r\n        // This is lame. I should create a date object from the startDate and startTime and use  createdDate.toISOString()\r\n        date: `${startDate}T${startTime}`,\r\n        // hour -> mins * sec\r\n        duration: eventDuration * 60 * 60,\r\n        coordinator: {\r\n          id: responsibleId,\r\n          email: email,\r\n        },\r\n      });\r\n\r\n      setIsValidForm(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      {/* Instead of isValid I could have used react router. I tried :) but I had to rework the main App.tsx file in order to use userHistory hook with withRouter. */}\r\n      {isValidForm ? (\r\n        <WSuccess title=\"Success\" message=\"Event has been created\" />\r\n      ) : (\r\n        <div>\r\n          <div className=\"section\">\r\n            <About />\r\n          </div>\r\n          <div className=\"section\">\r\n            <Coordinator />\r\n          </div>\r\n          <div className=\"section\">\r\n            <When />\r\n          </div>\r\n          <WButton\r\n            content=\"Publish Event\"\r\n            onClick={() => validateAndPrintData()}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\r\nimport aboutReducer from \"../features/about/aboutSlice\";\r\nimport coordinatorReducer from \"../features/coordinator/coordinatorSlice\";\r\nimport whenReducer from \"../features/when/whenSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    about: aboutReducer,\r\n    coordinator: coordinatorReducer,\r\n    when: whenReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}